pipeline {
    agent {
        docker {
            image 'php:8.0-cli'  // ou qualquer outra versão que você precise
            args '-v $WORKSPACE:/app' // Monta o workspace do Jenkins no container
        }
    }
    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'composer install --no-interaction'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh 'vendor/bin/phpunit'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("usuario/nome-da-imagem:${env.BUILD_ID}")
                }
            }
        }
        stage('Test Docker') {
            steps {
                script {
                    def dockerVersion = sh(script: 'docker --version', returnStdout: true).trim()
                    echo "Docker version: ${dockerVersion}"
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying...'
                }
            }
        }
    }
    post {
        always {
            junit 'tests/Results/*.xml'
        }
    }
}
